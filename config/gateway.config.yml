http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  api:
    host: localhost
    paths: '/ip'
  auth:
    host: localhost
    paths: [ '/auth', '/auth/*' ]
    methods: [ 'POST', 'GET' ]
  user:
    host: localhost
    paths: [ '/user', '/user/*' ]
  payment:
    host: localhost
    paths: [ '/api/payment', '/api/payment/*' ]
  ads:
    host: localhost
    paths: [ '/ads', '/ads/*' ]
serviceEndpoints:
  httpbin:
    url: 'https://httpbin.org'
  authService:
    url: 'http://localhost:3001'
  userService:
    url: 'http://localhost:3002'
  paymentService:
    url: 'http://localhost:8089'
  adsService:
    url: 'http://localhost:3003'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - jwt
  - request-transformer
pipelines:
  default:
    apiEndpoints:
      - music
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - log:
          action:
            message: 'proxy to all other services ${req.method} ${req.path}'
      - jwt:
          action:
            secretOrPublicKeyFile: './jwtRS256.key'
            checkCredentialExistence: true
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - proxy:
          action:
            serviceEndpoint: userService
            changeOrigin: true
  authPipeline:
    apiEndpoints:
      - auth
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - log:
          action:
            message: 'proxy to auth service ${req.method}'
      - proxy:
          action:
            serviceEndpoint: authService
            changeOrigin: true
  userPipeline:
    apiEndpoints:
      - user
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - log:
          action:
              message: 'proxy to user service ${req.method} with header ${req.headers.authorization}'
      - jwt:
          action:
            secretOrPublicKey: './jwtRS256.key'
            passThrough: true
      - request-transformer:
          action:
            body:
              add:
                user: req.user
      - proxy:
          - action:
              serviceEndpoint: userService
              changeOrigin: true
  paymentPipeline:
    apiEndpoints:
      - payment
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - log:
          action:
            message: 'proxy to payment service ${req.method}'
      - jwt:
          action:
            secretOrPublicKey: './jwtRS256.key'
            passThrough: true
      - request-transformer:
          action:
            body:
              add:
                user: req.amount
      - proxy:
          - action:
              serviceEndpoint: paymentService
              changeOrigin: true
  adsPipeline:
    apiEndpoints:
      - ads
    policies:
      # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      # - key-auth:
      - log:
          action:
            message: 'proxy to ads service ${req.method}'
      - proxy:
          - action:
              serviceEndpoint: adsService
              changeOrigin: true